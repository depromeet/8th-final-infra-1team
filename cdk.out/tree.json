{
  "version": "tree-0.1",
  "tree": {
    "id": "App",
    "path": "",
    "children": {
      "Tree": {
        "id": "Tree",
        "path": "Tree"
      },
      "VpcStack": {
        "id": "VpcStack",
        "path": "VpcStack",
        "children": {
          "Vpc": {
            "id": "Vpc",
            "path": "VpcStack/Vpc",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "VpcStack/Vpc/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::VPC",
                  "aws:cdk:cloudformation:props": {
                    "cidrBlock": "10.0.0.0/16",
                    "enableDnsHostnames": true,
                    "enableDnsSupport": true,
                    "instanceTenancy": "default",
                    "tags": [
                      {
                        "key": "Name",
                        "value": "VpcStack/Vpc"
                      }
                    ]
                  }
                }
              },
              "PublicSubnet1": {
                "id": "PublicSubnet1",
                "path": "VpcStack/Vpc/PublicSubnet1",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "VpcStack/Vpc/PublicSubnet1/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.0.0/24",
                        "vpcId": {
                          "Ref": "Vpc8378EB38"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            0,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": true,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Public"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Public"
                          },
                          {
                            "key": "Name",
                            "value": "VpcStack/Vpc/PublicSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "VpcStack/Vpc/PublicSubnet1/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "VpcStack/Vpc/PublicSubnet1/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "Vpc8378EB38"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "VpcStack/Vpc/PublicSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "VpcStack/Vpc/PublicSubnet1/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VpcPublicSubnet1RouteTable6C95E38E"
                        },
                        "subnetId": {
                          "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "VpcStack/Vpc/PublicSubnet1/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VpcPublicSubnet1RouteTable6C95E38E"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "gatewayId": {
                          "Ref": "VpcIGWD7BA715C"
                        }
                      }
                    }
                  },
                  "EIP": {
                    "id": "EIP",
                    "path": "VpcStack/Vpc/PublicSubnet1/EIP",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::EIP",
                      "aws:cdk:cloudformation:props": {
                        "domain": "vpc",
                        "tags": [
                          {
                            "key": "Name",
                            "value": "VpcStack/Vpc/PublicSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "NATGateway": {
                    "id": "NATGateway",
                    "path": "VpcStack/Vpc/PublicSubnet1/NATGateway",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::NatGateway",
                      "aws:cdk:cloudformation:props": {
                        "allocationId": {
                          "Fn::GetAtt": [
                            "VpcPublicSubnet1EIPD7E02669",
                            "AllocationId"
                          ]
                        },
                        "subnetId": {
                          "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "VpcStack/Vpc/PublicSubnet1"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "PublicSubnet2": {
                "id": "PublicSubnet2",
                "path": "VpcStack/Vpc/PublicSubnet2",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "VpcStack/Vpc/PublicSubnet2/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.1.0/24",
                        "vpcId": {
                          "Ref": "Vpc8378EB38"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            1,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": true,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Public"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Public"
                          },
                          {
                            "key": "Name",
                            "value": "VpcStack/Vpc/PublicSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "VpcStack/Vpc/PublicSubnet2/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "VpcStack/Vpc/PublicSubnet2/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "Vpc8378EB38"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "VpcStack/Vpc/PublicSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "VpcStack/Vpc/PublicSubnet2/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VpcPublicSubnet2RouteTable94F7E489"
                        },
                        "subnetId": {
                          "Ref": "VpcPublicSubnet2Subnet691E08A3"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "VpcStack/Vpc/PublicSubnet2/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VpcPublicSubnet2RouteTable94F7E489"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "gatewayId": {
                          "Ref": "VpcIGWD7BA715C"
                        }
                      }
                    }
                  }
                }
              },
              "PrivateSubnet1": {
                "id": "PrivateSubnet1",
                "path": "VpcStack/Vpc/PrivateSubnet1",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "VpcStack/Vpc/PrivateSubnet1/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.2.0/24",
                        "vpcId": {
                          "Ref": "Vpc8378EB38"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            0,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": false,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Private"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Private"
                          },
                          {
                            "key": "Name",
                            "value": "VpcStack/Vpc/PrivateSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "VpcStack/Vpc/PrivateSubnet1/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "VpcStack/Vpc/PrivateSubnet1/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "Vpc8378EB38"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "VpcStack/Vpc/PrivateSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "VpcStack/Vpc/PrivateSubnet1/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500"
                        },
                        "subnetId": {
                          "Ref": "VpcPrivateSubnet1Subnet536B997A"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "VpcStack/Vpc/PrivateSubnet1/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "natGatewayId": {
                          "Ref": "VpcPublicSubnet1NATGateway4D7517AA"
                        }
                      }
                    }
                  }
                }
              },
              "PrivateSubnet2": {
                "id": "PrivateSubnet2",
                "path": "VpcStack/Vpc/PrivateSubnet2",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "VpcStack/Vpc/PrivateSubnet2/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.3.0/24",
                        "vpcId": {
                          "Ref": "Vpc8378EB38"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            1,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": false,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Private"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Private"
                          },
                          {
                            "key": "Name",
                            "value": "VpcStack/Vpc/PrivateSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "VpcStack/Vpc/PrivateSubnet2/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "VpcStack/Vpc/PrivateSubnet2/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "Vpc8378EB38"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "VpcStack/Vpc/PrivateSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "VpcStack/Vpc/PrivateSubnet2/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VpcPrivateSubnet2RouteTableA678073B"
                        },
                        "subnetId": {
                          "Ref": "VpcPrivateSubnet2Subnet3788AAA1"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "VpcStack/Vpc/PrivateSubnet2/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VpcPrivateSubnet2RouteTableA678073B"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "natGatewayId": {
                          "Ref": "VpcPublicSubnet1NATGateway4D7517AA"
                        }
                      }
                    }
                  }
                }
              },
              "IGW": {
                "id": "IGW",
                "path": "VpcStack/Vpc/IGW",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::InternetGateway",
                  "aws:cdk:cloudformation:props": {
                    "tags": [
                      {
                        "key": "Name",
                        "value": "VpcStack/Vpc"
                      }
                    ]
                  }
                }
              },
              "VPCGW": {
                "id": "VPCGW",
                "path": "VpcStack/Vpc/VPCGW",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::VPCGatewayAttachment",
                  "aws:cdk:cloudformation:props": {
                    "vpcId": {
                      "Ref": "Vpc8378EB38"
                    },
                    "internetGatewayId": {
                      "Ref": "VpcIGWD7BA715C"
                    }
                  }
                }
              }
            }
          },
          "vpcId": {
            "id": "vpcId",
            "path": "VpcStack/vpcId"
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "VpcStack/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "VpcStack/CDKMetadata/Default"
              },
              "Condition": {
                "id": "Condition",
                "path": "VpcStack/CDKMetadata/Condition"
              }
            }
          },
          "Exports": {
            "id": "Exports",
            "path": "VpcStack/Exports",
            "children": {
              "Output{\"Ref\":\"Vpc8378EB38\"}": {
                "id": "Output{\"Ref\":\"Vpc8378EB38\"}",
                "path": "VpcStack/Exports/Output{\"Ref\":\"Vpc8378EB38\"}"
              },
              "Output{\"Ref\":\"VpcPublicSubnet1Subnet5C2D37C4\"}": {
                "id": "Output{\"Ref\":\"VpcPublicSubnet1Subnet5C2D37C4\"}",
                "path": "VpcStack/Exports/Output{\"Ref\":\"VpcPublicSubnet1Subnet5C2D37C4\"}"
              },
              "Output{\"Ref\":\"VpcPublicSubnet2Subnet691E08A3\"}": {
                "id": "Output{\"Ref\":\"VpcPublicSubnet2Subnet691E08A3\"}",
                "path": "VpcStack/Exports/Output{\"Ref\":\"VpcPublicSubnet2Subnet691E08A3\"}"
              }
            }
          }
        }
      },
      "SecurityGroupStack": {
        "id": "SecurityGroupStack",
        "path": "SecurityGroupStack",
        "children": {
          "ingress-security-group": {
            "id": "ingress-security-group",
            "path": "SecurityGroupStack/ingress-security-group",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "SecurityGroupStack/ingress-security-group/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                  "aws:cdk:cloudformation:props": {
                    "groupDescription": "SecurityGroupStack/ingress-security-group",
                    "groupName": "ingress-security-group",
                    "securityGroupEgress": [
                      {
                        "cidrIp": "255.255.255.255/32",
                        "description": "Disallow all traffic",
                        "ipProtocol": "icmp",
                        "fromPort": 252,
                        "toPort": 86
                      }
                    ],
                    "securityGroupIngress": [
                      {
                        "cidrIp": "0.0.0.0/32",
                        "ipProtocol": "tcp",
                        "fromPort": 22,
                        "toPort": 22,
                        "description": "from 0.0.0.0/32:22"
                      },
                      {
                        "cidrIp": "0.0.0.0/32",
                        "ipProtocol": "tcp",
                        "fromPort": 80,
                        "toPort": 80,
                        "description": "from 0.0.0.0/32:80"
                      },
                      {
                        "cidrIp": "0.0.0.0/32",
                        "ipProtocol": "tcp",
                        "fromPort": 443,
                        "toPort": 443,
                        "description": "from 0.0.0.0/32:443"
                      },
                      {
                        "cidrIp": "0.0.0.0/32",
                        "ipProtocol": "tcp",
                        "fromPort": 3000,
                        "toPort": 3000,
                        "description": "from 0.0.0.0/32:3000"
                      }
                    ],
                    "vpcId": {
                      "Fn::ImportValue": "VpcStack:ExportsOutputRefVpc8378EB38272D6E3A"
                    }
                  }
                }
              }
            }
          },
          "SecurityGroup": {
            "id": "SecurityGroup",
            "path": "SecurityGroupStack/SecurityGroup"
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "SecurityGroupStack/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "SecurityGroupStack/CDKMetadata/Default"
              },
              "Condition": {
                "id": "Condition",
                "path": "SecurityGroupStack/CDKMetadata/Condition"
              }
            }
          }
        }
      },
      "aws-fargate-application-autoscaling": {
        "id": "aws-fargate-application-autoscaling",
        "path": "aws-fargate-application-autoscaling",
        "children": {
          "fargate-service-autoscaling": {
            "id": "fargate-service-autoscaling",
            "path": "aws-fargate-application-autoscaling/fargate-service-autoscaling",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "aws-fargate-application-autoscaling/fargate-service-autoscaling/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::Cluster",
                  "aws:cdk:cloudformation:props": {
                    "clusterName": "fragraph-cluster"
                  }
                }
              }
            }
          },
          "ecr-repository": {
            "id": "ecr-repository",
            "path": "aws-fargate-application-autoscaling/ecr-repository",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "aws-fargate-application-autoscaling/ecr-repository/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECR::Repository",
                  "aws:cdk:cloudformation:props": {
                    "repositoryName": "fragraph-ecr"
                  }
                }
              },
              "ImageScanOnPush": {
                "id": "ImageScanOnPush",
                "path": "aws-fargate-application-autoscaling/ecr-repository/ImageScanOnPush",
                "children": {
                  "Provider": {
                    "id": "Provider",
                    "path": "aws-fargate-application-autoscaling/ecr-repository/ImageScanOnPush/Provider"
                  },
                  "CustomResourcePolicy": {
                    "id": "CustomResourcePolicy",
                    "path": "aws-fargate-application-autoscaling/ecr-repository/ImageScanOnPush/CustomResourcePolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "aws-fargate-application-autoscaling/ecr-repository/ImageScanOnPush/CustomResourcePolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "ecr:PutImageScanningConfiguration",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "ecrrepository892B51BD",
                                      "Arn"
                                    ]
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "ecrrepositoryImageScanOnPushCustomResourcePolicyB34470D0",
                            "roles": [
                              {
                                "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
                              }
                            ]
                          }
                        }
                      }
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "aws-fargate-application-autoscaling/ecr-repository/ImageScanOnPush/Resource",
                    "children": {
                      "Default": {
                        "id": "Default",
                        "path": "aws-fargate-application-autoscaling/ecr-repository/ImageScanOnPush/Resource/Default"
                      }
                    }
                  }
                }
              }
            }
          },
          "AWS679f53fac002430cb0da5b7982bd2287": {
            "id": "AWS679f53fac002430cb0da5b7982bd2287",
            "path": "aws-fargate-application-autoscaling/AWS679f53fac002430cb0da5b7982bd2287",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "aws-fargate-application-autoscaling/AWS679f53fac002430cb0da5b7982bd2287/ServiceRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "aws-fargate-application-autoscaling/AWS679f53fac002430cb0da5b7982bd2287/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "Code": {
                "id": "Code",
                "path": "aws-fargate-application-autoscaling/AWS679f53fac002430cb0da5b7982bd2287/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "aws-fargate-application-autoscaling/AWS679f53fac002430cb0da5b7982bd2287/Code/Stage"
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "aws-fargate-application-autoscaling/AWS679f53fac002430cb0da5b7982bd2287/Code/AssetBucket"
                  }
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "aws-fargate-application-autoscaling/AWS679f53fac002430cb0da5b7982bd2287/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": {
                        "Ref": "AssetParameters4a3609ad912843e581892f37ae9d6fb0fa1648b547693aaa562b0119452b8956S3Bucket72B03BC9"
                      },
                      "s3Key": {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::Select": [
                                0,
                                {
                                  "Fn::Split": [
                                    "||",
                                    {
                                      "Ref": "AssetParameters4a3609ad912843e581892f37ae9d6fb0fa1648b547693aaa562b0119452b8956S3VersionKey520B7554"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Fn::Select": [
                                1,
                                {
                                  "Fn::Split": [
                                    "||",
                                    {
                                      "Ref": "AssetParameters4a3609ad912843e581892f37ae9d6fb0fa1648b547693aaa562b0119452b8956S3VersionKey520B7554"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        ]
                      }
                    },
                    "handler": "index.handler",
                    "role": {
                      "Fn::GetAtt": [
                        "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
                        "Arn"
                      ]
                    },
                    "runtime": "nodejs12.x",
                    "timeout": 120
                  }
                }
              }
            }
          },
          "AssetParameters": {
            "id": "AssetParameters",
            "path": "aws-fargate-application-autoscaling/AssetParameters",
            "children": {
              "4a3609ad912843e581892f37ae9d6fb0fa1648b547693aaa562b0119452b8956": {
                "id": "4a3609ad912843e581892f37ae9d6fb0fa1648b547693aaa562b0119452b8956",
                "path": "aws-fargate-application-autoscaling/AssetParameters/4a3609ad912843e581892f37ae9d6fb0fa1648b547693aaa562b0119452b8956",
                "children": {
                  "S3Bucket": {
                    "id": "S3Bucket",
                    "path": "aws-fargate-application-autoscaling/AssetParameters/4a3609ad912843e581892f37ae9d6fb0fa1648b547693aaa562b0119452b8956/S3Bucket"
                  },
                  "S3VersionKey": {
                    "id": "S3VersionKey",
                    "path": "aws-fargate-application-autoscaling/AssetParameters/4a3609ad912843e581892f37ae9d6fb0fa1648b547693aaa562b0119452b8956/S3VersionKey"
                  },
                  "ArtifactHash": {
                    "id": "ArtifactHash",
                    "path": "aws-fargate-application-autoscaling/AssetParameters/4a3609ad912843e581892f37ae9d6fb0fa1648b547693aaa562b0119452b8956/ArtifactHash"
                  }
                }
              }
            }
          },
          "SsmParameterValue:--fragraph--database--id:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter": {
            "id": "SsmParameterValue:--fragraph--database--id:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter",
            "path": "aws-fargate-application-autoscaling/SsmParameterValue:--fragraph--database--id:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter"
          },
          "SsmParameterValue:--fragraph--database--id:C96584B6-F00A-464E-AD19-53AFF4B05118": {
            "id": "SsmParameterValue:--fragraph--database--id:C96584B6-F00A-464E-AD19-53AFF4B05118",
            "path": "aws-fargate-application-autoscaling/SsmParameterValue:--fragraph--database--id:C96584B6-F00A-464E-AD19-53AFF4B05118"
          },
          "SsmParameterValue:--fragraph--database--pw:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter": {
            "id": "SsmParameterValue:--fragraph--database--pw:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter",
            "path": "aws-fargate-application-autoscaling/SsmParameterValue:--fragraph--database--pw:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter"
          },
          "SsmParameterValue:--fragraph--database--pw:C96584B6-F00A-464E-AD19-53AFF4B05118": {
            "id": "SsmParameterValue:--fragraph--database--pw:C96584B6-F00A-464E-AD19-53AFF4B05118",
            "path": "aws-fargate-application-autoscaling/SsmParameterValue:--fragraph--database--pw:C96584B6-F00A-464E-AD19-53AFF4B05118"
          },
          "SsmParameterValue:--fragraph--database--host:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter": {
            "id": "SsmParameterValue:--fragraph--database--host:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter",
            "path": "aws-fargate-application-autoscaling/SsmParameterValue:--fragraph--database--host:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter"
          },
          "SsmParameterValue:--fragraph--database--host:C96584B6-F00A-464E-AD19-53AFF4B05118": {
            "id": "SsmParameterValue:--fragraph--database--host:C96584B6-F00A-464E-AD19-53AFF4B05118",
            "path": "aws-fargate-application-autoscaling/SsmParameterValue:--fragraph--database--host:C96584B6-F00A-464E-AD19-53AFF4B05118"
          },
          "fragraph": {
            "id": "fragraph",
            "path": "aws-fargate-application-autoscaling/fragraph",
            "children": {
              "LB": {
                "id": "LB",
                "path": "aws-fargate-application-autoscaling/fragraph/LB",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "aws-fargate-application-autoscaling/fragraph/LB/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
                      "aws:cdk:cloudformation:props": {
                        "loadBalancerAttributes": [
                          {
                            "key": "deletion_protection.enabled",
                            "value": "false"
                          }
                        ],
                        "scheme": "internet-facing",
                        "subnets": [
                          {
                            "Fn::ImportValue": "VpcStack:ExportsOutputRefVpcPublicSubnet1Subnet5C2D37C4FFA2B456"
                          },
                          {
                            "Fn::ImportValue": "VpcStack:ExportsOutputRefVpcPublicSubnet2Subnet691E08A351552740"
                          }
                        ],
                        "type": "network"
                      }
                    }
                  },
                  "PublicListener": {
                    "id": "PublicListener",
                    "path": "aws-fargate-application-autoscaling/fragraph/LB/PublicListener",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "aws-fargate-application-autoscaling/fragraph/LB/PublicListener/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::Listener",
                          "aws:cdk:cloudformation:props": {
                            "defaultActions": [
                              {
                                "type": "forward",
                                "targetGroupArn": {
                                  "Ref": "fragraphLBPublicListenerECSGroup18D6C1D8"
                                }
                              }
                            ],
                            "loadBalancerArn": {
                              "Ref": "fragraphLB511680B1"
                            },
                            "port": 3000,
                            "protocol": "TCP"
                          }
                        }
                      },
                      "ECSGroup": {
                        "id": "ECSGroup",
                        "path": "aws-fargate-application-autoscaling/fragraph/LB/PublicListener/ECSGroup",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "aws-fargate-application-autoscaling/fragraph/LB/PublicListener/ECSGroup/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::TargetGroup",
                              "aws:cdk:cloudformation:props": {
                                "port": 80,
                                "protocol": "TCP",
                                "targetType": "ip",
                                "vpcId": {
                                  "Fn::ImportValue": "VpcStack:ExportsOutputRefVpc8378EB38272D6E3A"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "LoadBalancerDNS": {
                "id": "LoadBalancerDNS",
                "path": "aws-fargate-application-autoscaling/fragraph/LoadBalancerDNS"
              },
              "TaskDef": {
                "id": "TaskDef",
                "path": "aws-fargate-application-autoscaling/fragraph/TaskDef",
                "children": {
                  "TaskRole": {
                    "id": "TaskRole",
                    "path": "aws-fargate-application-autoscaling/fragraph/TaskDef/TaskRole",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "aws-fargate-application-autoscaling/fragraph/TaskDef/TaskRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "ecs-tasks.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        }
                      }
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "aws-fargate-application-autoscaling/fragraph/TaskDef/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ECS::TaskDefinition",
                      "aws:cdk:cloudformation:props": {
                        "containerDefinitions": [
                          {
                            "essential": true,
                            "image": {
                              "Fn::Join": [
                                "",
                                [
                                  {
                                    "Fn::Select": [
                                      4,
                                      {
                                        "Fn::Split": [
                                          ":",
                                          {
                                            "Fn::GetAtt": [
                                              "ecrrepository892B51BD",
                                              "Arn"
                                            ]
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  ".dkr.ecr.",
                                  {
                                    "Fn::Select": [
                                      3,
                                      {
                                        "Fn::Split": [
                                          ":",
                                          {
                                            "Fn::GetAtt": [
                                              "ecrrepository892B51BD",
                                              "Arn"
                                            ]
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  ".",
                                  {
                                    "Ref": "AWS::URLSuffix"
                                  },
                                  "/",
                                  {
                                    "Ref": "ecrrepository892B51BD"
                                  },
                                  ":latest"
                                ]
                              ]
                            },
                            "name": "fragraph",
                            "portMappings": [
                              {
                                "containerPort": 3000,
                                "protocol": "tcp"
                              }
                            ],
                            "logConfiguration": {
                              "logDriver": "awslogs",
                              "options": {
                                "awslogs-group": {
                                  "Ref": "fragraphTaskDeffragraphLogGroup16F96D2D"
                                },
                                "awslogs-stream-prefix": "fragraph",
                                "awslogs-region": {
                                  "Ref": "AWS::Region"
                                }
                              }
                            },
                            "environment": [
                              {
                                "name": "DB_DEFAULT_USERNAME",
                                "value": {
                                  "Ref": "SsmParameterValuefragraphdatabaseidC96584B6F00A464EAD1953AFF4B05118Parameter"
                                }
                              },
                              {
                                "name": "DB_DEFAULT_PASSWORD",
                                "value": {
                                  "Ref": "SsmParameterValuefragraphdatabasepwC96584B6F00A464EAD1953AFF4B05118Parameter"
                                }
                              },
                              {
                                "name": "DB_DEFAULT_HOST",
                                "value": {
                                  "Ref": "SsmParameterValuefragraphdatabasehostC96584B6F00A464EAD1953AFF4B05118Parameter"
                                }
                              }
                            ]
                          }
                        ],
                        "cpu": "256",
                        "executionRoleArn": {
                          "Fn::GetAtt": [
                            "fragraphTaskDefExecutionRoleCA44645A",
                            "Arn"
                          ]
                        },
                        "family": "fragraph",
                        "memory": "512",
                        "networkMode": "awsvpc",
                        "requiresCompatibilities": [
                          "FARGATE"
                        ],
                        "taskRoleArn": {
                          "Fn::GetAtt": [
                            "fragraphTaskDefTaskRole23435263",
                            "Arn"
                          ]
                        }
                      }
                    }
                  },
                  "fragraph": {
                    "id": "fragraph",
                    "path": "aws-fargate-application-autoscaling/fragraph/TaskDef/fragraph",
                    "children": {
                      "LogGroup": {
                        "id": "LogGroup",
                        "path": "aws-fargate-application-autoscaling/fragraph/TaskDef/fragraph/LogGroup",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "aws-fargate-application-autoscaling/fragraph/TaskDef/fragraph/LogGroup/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Logs::LogGroup",
                              "aws:cdk:cloudformation:props": {}
                            }
                          }
                        }
                      }
                    }
                  },
                  "ExecutionRole": {
                    "id": "ExecutionRole",
                    "path": "aws-fargate-application-autoscaling/fragraph/TaskDef/ExecutionRole",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "aws-fargate-application-autoscaling/fragraph/TaskDef/ExecutionRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "ecs-tasks.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "managedPolicyArns": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":iam::aws:policy/AmazonEC2ContainerRegistryPowerUser"
                                  ]
                                ]
                              }
                            ]
                          }
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "aws-fargate-application-autoscaling/fragraph/TaskDef/ExecutionRole/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "aws-fargate-application-autoscaling/fragraph/TaskDef/ExecutionRole/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "ecr:BatchCheckLayerAvailability",
                                        "ecr:GetDownloadUrlForLayer",
                                        "ecr:BatchGetImage"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::GetAtt": [
                                          "ecrrepository892B51BD",
                                          "Arn"
                                        ]
                                      }
                                    },
                                    {
                                      "Action": "ecr:GetAuthorizationToken",
                                      "Effect": "Allow",
                                      "Resource": "*"
                                    },
                                    {
                                      "Action": [
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::GetAtt": [
                                          "fragraphTaskDeffragraphLogGroup16F96D2D",
                                          "Arn"
                                        ]
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "fragraphTaskDefExecutionRoleDefaultPolicy4C7739F4",
                                "roles": [
                                  {
                                    "Ref": "fragraphTaskDefExecutionRoleCA44645A"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Service": {
                "id": "Service",
                "path": "aws-fargate-application-autoscaling/fragraph/Service",
                "children": {
                  "Service": {
                    "id": "Service",
                    "path": "aws-fargate-application-autoscaling/fragraph/Service/Service",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ECS::Service",
                      "aws:cdk:cloudformation:props": {
                        "cluster": {
                          "Ref": "fargateserviceautoscalingD107CF93"
                        },
                        "deploymentConfiguration": {
                          "maximumPercent": 200,
                          "minimumHealthyPercent": 50
                        },
                        "desiredCount": 1,
                        "enableEcsManagedTags": false,
                        "healthCheckGracePeriodSeconds": 60,
                        "launchType": "FARGATE",
                        "loadBalancers": [
                          {
                            "targetGroupArn": {
                              "Ref": "fragraphLBPublicListenerECSGroup18D6C1D8"
                            },
                            "containerName": "fragraph",
                            "containerPort": 3000
                          }
                        ],
                        "networkConfiguration": {
                          "awsvpcConfiguration": {
                            "assignPublicIp": "ENABLED",
                            "subnets": [
                              {
                                "Fn::ImportValue": "VpcStack:ExportsOutputRefVpcPublicSubnet1Subnet5C2D37C4FFA2B456"
                              },
                              {
                                "Fn::ImportValue": "VpcStack:ExportsOutputRefVpcPublicSubnet2Subnet691E08A351552740"
                              }
                            ],
                            "securityGroups": [
                              {
                                "Fn::GetAtt": [
                                  "fragraphServiceSecurityGroup033CE2A4",
                                  "GroupId"
                                ]
                              }
                            ]
                          }
                        },
                        "serviceName": "fragraph",
                        "taskDefinition": {
                          "Ref": "fragraphTaskDef8ED2F7EC"
                        }
                      }
                    }
                  },
                  "SecurityGroup": {
                    "id": "SecurityGroup",
                    "path": "aws-fargate-application-autoscaling/fragraph/Service/SecurityGroup",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "aws-fargate-application-autoscaling/fragraph/Service/SecurityGroup/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                          "aws:cdk:cloudformation:props": {
                            "groupDescription": "aws-fargate-application-autoscaling/fragraph/Service/SecurityGroup",
                            "securityGroupEgress": [
                              {
                                "cidrIp": "0.0.0.0/0",
                                "description": "Allow all outbound traffic by default",
                                "ipProtocol": "-1"
                              }
                            ],
                            "vpcId": {
                              "Fn::ImportValue": "VpcStack:ExportsOutputRefVpc8378EB38272D6E3A"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "LoadBalancerDNS": {
            "id": "LoadBalancerDNS",
            "path": "aws-fargate-application-autoscaling/LoadBalancerDNS"
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "aws-fargate-application-autoscaling/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "aws-fargate-application-autoscaling/CDKMetadata/Default"
              },
              "Condition": {
                "id": "Condition",
                "path": "aws-fargate-application-autoscaling/CDKMetadata/Condition"
              }
            }
          }
        }
      }
    }
  }
}